[2018-06-23 14:11:24,403] TRACE Controller 0 epoch 1 changed partition [dummyTopic,0] state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2018-06-23 14:11:24,425] ERROR Controller 0 epoch 1 initiated state change of replica 0 for partition [dummyTopic,0] from NonExistentReplica to NewReplica failed (state.change.logger)
kafka.common.StateChangeFailedException: Replica 0 for partition [dummyTopic,0] cannot be moved to NewReplicastate as it is being requested to become leader
	at kafka.controller.ReplicaStateMachine.handleStateChange(ReplicaStateMachine.scala:176)
	at kafka.controller.ReplicaStateMachine$$anonfun$handleStateChanges$2.apply(ReplicaStateMachine.scala:112)
	at kafka.controller.ReplicaStateMachine$$anonfun$handleStateChanges$2.apply(ReplicaStateMachine.scala:112)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.ReplicaStateMachine.handleStateChanges(ReplicaStateMachine.scala:112)
	at kafka.controller.KafkaController.onNewPartitionCreation(KafkaController.scala:525)
	at kafka.controller.KafkaController.onNewTopicCreation(KafkaController.scala:513)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(PartitionStateMachine.scala:430)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.doHandleChildChange(PartitionStateMachine.scala:412)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.handleChildChange(PartitionStateMachine.scala:407)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2018-06-23 14:11:24,446] ERROR Controller 0 epoch 1 encountered error while changing partition [dummyTopic,0]'s state from New to Online since LeaderAndIsr path already exists with value {"leader":0,"leader_epoch":0,"isr":[0]} and controller epoch 1 (state.change.logger)
[2018-06-23 14:11:24,447] ERROR Controller 0 epoch 1 initiated state change for partition [dummyTopic,0] from NewPartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while changing partition [dummyTopic,0]'s state from New to Online since LeaderAndIsr path already exists with value {"leader":0,"leader_epoch":0,"isr":[0]} and controller epoch 1
	at kafka.controller.PartitionStateMachine.initializeLeaderAndIsrForPartition(PartitionStateMachine.scala:305)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:198)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:141)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:140)
	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:103)
	at scala.collection.mutable.HashMap$$anon$1$$anonfun$foreach$2.apply(HashMap.scala:103)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap$$anon$1.foreach(HashMap.scala:103)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:140)
	at kafka.controller.KafkaController.onNewPartitionCreation(KafkaController.scala:526)
	at kafka.controller.KafkaController.onNewTopicCreation(KafkaController.scala:513)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(PartitionStateMachine.scala:430)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.doHandleChildChange(PartitionStateMachine.scala:412)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.handleChildChange(PartitionStateMachine.scala:407)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2018-06-23 14:11:24,449] ERROR Controller 0 epoch 1 initiated state change of replica 0 for partition [dummyTopic,0] from NonExistentReplica to OnlineReplica failed (state.change.logger)
java.lang.AssertionError: assertion failed: Replica [Topic=dummyTopic,Partition=0,Replica=0] should be in the NewReplica,OnlineReplica,OfflineReplica,ReplicaDeletionIneligible states before moving to OnlineReplica state. Instead it is in NonExistentReplica state
	at scala.Predef$.assert(Predef.scala:170)
	at kafka.controller.ReplicaStateMachine.assertValidPreviousStates(ReplicaStateMachine.scala:307)
	at kafka.controller.ReplicaStateMachine.handleStateChange(ReplicaStateMachine.scala:214)
	at kafka.controller.ReplicaStateMachine$$anonfun$handleStateChanges$2.apply(ReplicaStateMachine.scala:112)
	at kafka.controller.ReplicaStateMachine$$anonfun$handleStateChanges$2.apply(ReplicaStateMachine.scala:112)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.ReplicaStateMachine.handleStateChanges(ReplicaStateMachine.scala:112)
	at kafka.controller.KafkaController.onNewPartitionCreation(KafkaController.scala:527)
	at kafka.controller.KafkaController.onNewTopicCreation(KafkaController.scala:513)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply$mcV$sp(PartitionStateMachine.scala:430)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.controller.PartitionStateMachine$TopicChangeListener$$anonfun$doHandleChildChange$1.apply(PartitionStateMachine.scala:413)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.doHandleChildChange(PartitionStateMachine.scala:412)
	at kafka.controller.ControllerZkChildListener$class.handleChildChange(ControllerZkListener.scala:35)
	at kafka.controller.PartitionStateMachine$TopicChangeListener.handleChildChange(PartitionStateMachine.scala:407)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:844)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2018-06-23 14:12:27,191] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2018-06-23 14:12:36,132] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to brokers Set() for partition dummyTopic-0 (state.change.logger)
[2018-06-23 14:12:36,150] TRACE Controller 0 epoch 2 started leader election for partition [dummyTopic,0] (state.change.logger)
[2018-06-23 14:12:36,158] ERROR Controller 0 epoch 2 initiated state change for partition [dummyTopic,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [dummyTopic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:339)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:200)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:115)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:112)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:112)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:67)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:342)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:160)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:85)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:154)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply(ZookeeperLeaderElector.scala:154)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply(ZookeeperLeaderElector.scala:154)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:213)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener.handleDataDeleted(ZookeeperLeaderElector.scala:153)
	at org.I0Itec.zkclient.ZkClient$9.run(ZkClient.java:825)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)
[2018-06-23 14:13:02,701] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
